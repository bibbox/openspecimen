<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.krishagni.catissueplus.core.de.domain.QueryFolder" table="CATISSUE_QUERY_FOLDERS">

    <id name="id" column="IDENTIFIER">
      <generator class="native">
        <param name="sequence">CATISSUE_QUERY_FOLDERS_SEQ</param>
      </generator>
    </id>

    <property name="name" column="NAME"/>

    <property name="sharedWithAll" column="SHARED_WITH_ALL"/>

    <many-to-one name="owner" column="OWNER"/>
     
    <set name="sharedWith" table="CATISSUE_QFOLDER_SHARE_SETTING">
      <key column="FOLDER_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.User" column="USER_ID">
        <filter name="activeEntity" condition="activity_status != 'Disabled'"/>
      </many-to-many>
    </set>

    <set name="sharedWithGroups" table="OS_QUERY_FOLDER_SHARED_GROUPS">
      <key column="FOLDER_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.UserGroup" column="GROUP_ID">
        <filter name="activeEntity" condition="activity_status != 'Disabled'"/>
      </many-to-many>
    </set>
	
    <set name="savedQueries" table="CATISSUE_QUERY_FOLDER_QUERIES">
      <key column="FOLDER_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.de.domain.SavedQuery" column="QUERY_ID" />
    </set>
	
    <query name="getQueryFoldersByUser">
      select 
        distinct f 
      from 
        QueryFolder f
        inner join f.owner owner
        left join f.sharedWith sharedWith
        left join f.sharedWithGroups sharedGroups
        left join sharedGroups.users groupUser
      where
        f.sharedWithAll = true or owner.id = :userId or sharedWith.id = :userId or groupUser.id = :userId
    </query>
    
    <query name="getQueryFolderByName">
      from QueryFolder f where f.name = :name
    </query>

    <sql-query name="sharedWithUser">
      <return-scalar column="folderId" type="long"/>

      select
        f.identifier as folderId
      from
        catissue_query_folders f
      where
        f.identifier = :folderId and
        (
          exists (
            select
              u.folder_id
            from
              catissue_qfolder_share_setting u
            where
              u.folder_id = f.identifier and
              u.user_id = :userId
          ) or
          exists (
            select
              fg.folder_id
            from
              os_query_folder_shared_groups fg
              inner join os_user_groups g on g.identifier = fg.group_id
              inner join os_user_group_users gu on gu.group_id = g.identifier
            where
              fg.folder_id = f.identifier and
              g.activity_status != 'Disabled' and
              gu.user_id = :userId
          )
        )
    </sql-query>
  </class> 
</hibernate-mapping>
